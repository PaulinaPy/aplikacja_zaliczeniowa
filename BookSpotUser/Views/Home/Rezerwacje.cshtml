@{
    ViewData["Title"] = "Rezerwacje";
}

<div id="calendar"></div>

<!-- Modal -->
<div class="modal fade" id="reservationModal" tabindex="-1" aria-labelledby="reservationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reservationModalLabel">Rezerwacja</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex justify-content-center align-items-center" style="height: 75vh;">
                <div class="text-center">
                    <p>Wybierz opcje rezerwacji dla daty: <span id="selectedDate"></span></p>
                    <div id="deskLayout" style="position: relative; display: inline-block;">
                        <img src="/images/rzut_biura.png" alt="Rzut biura" class="img-fluid" style="max-height: 50%; max-width: 50%;"/>
                        <!-- Zdefiniowane biurka -->
                        <div class="desk" data-desk-id="1" style="position: absolute; width: 70px; height: 70px; left: 318px; top: 35px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="2" style="position: absolute; width: 70px; height: 70px; left: 388px; top: 35px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="3" style="position: absolute; width: 70px; height: 70px; left: 318px; top: 115px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="4" style="position: absolute; width: 70px; height: 70px; left: 388px; top: 115px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="5" style="position: absolute; width: 70px; height: 70px; left: 492px; top: 35px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="6" style="position: absolute; width: 70px; height: 70px; left: 562px; top: 35px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="7" style="position: absolute; width: 70px; height: 70px; left: 492px; top: 115px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="8" style="position: absolute; width: 70px; height: 70px; left: 562px; top: 115px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="9" style="position: absolute; width: 70px; height: 70px; left: 492px; top: 195px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="10" style="position: absolute; width: 70px; height: 70px; left: 562px; top: 195px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="11" style="position: absolute; width: 70px; height: 70px; left: 492px; top: 300px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="12" style="position: absolute; width: 70px; height: 70px; left: 562px; top: 300px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="13" style="position: absolute; width: 70px; height: 70px; left: 492px; top: 375px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="14" style="position: absolute; width: 70px; height: 70px; left: 562px; top: 375px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="15" style="position: absolute; width: 70px; height: 70px; left: 492px; top: 450px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="16" style="position: absolute; width: 70px; height: 70px; left: 562px; top: 450px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="17" style="position: absolute; width: 70px; height: 70px; left: 654px; top: 35px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="18" style="position: absolute; width: 70px; height: 70px; left: 724px; top: 35px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="19" style="position: absolute; width: 70px; height: 70px; left: 654px; top: 115px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="20" style="position: absolute; width: 70px; height: 70px; left: 724px; top: 115px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="21" style="position: absolute; width: 70px; height: 70px; left: 654px; top: 195px; z-index: 1;"></div>
                        <div class="desk" data-desk-id="22" style="position: absolute; width: 70px; height: 70px; left: 724px; top: 195px; z-index: 1;"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                <button type="button" class="btn btn-primary" id="saveBooking">Zapisz</button>
            </div>
            <!-- Formularz -->
            <form id="bookingForm" action="http://localhost:5150/BookedDesks/Create" method="post">
                <input type="hidden" id="deskId" name="deskId" />
                <input type="hidden" id="userId" name="userId" value="1" />
                <input type="hidden" id="firstName" name="firstName" value="Jan" />
                <input type="hidden" id="lastName" name="lastName" value="Kowalski" />
                <input type="hidden" id="bookedDate" name="bookedDate" />
            </form>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    var calendarEl = document.getElementById('calendar');

    var calendar = new FullCalendar.Calendar(calendarEl, {
        locale: 'pl',
        themeSystem: 'bootstrap5',
        initialView: 'dayGridMonth',
        dateClick: function (info) {
            var clickedDate = info.date;
            var today = new Date();
            today.setHours(0, 0, 0, 0); // Ustawia godziny na 00:00:00

            // Sprawdzenie, czy wybrana data nie jest przeszła
            if (clickedDate < today) {
                alert("Nie można wybrać daty przeszłej.");
                return; // Zatrzymuje dalszą akcję, jeśli data jest wcześniejsza
            }

            var year = clickedDate.getFullYear();
            var month = String(clickedDate.getMonth() + 1).padStart(2, '0'); // Dodaje 0 dla miesięcy jednocyfrowych
            var day = String(clickedDate.getDate()).padStart(2, '0'); // Dodaje 0 dla dni jednocyfrowych

            var formattedDate = `${year}-${month}-${day}`;
            document.getElementById('selectedDate').innerText = formattedDate;

            // Sprawdzenie dostępności biurek
            fetch(`/BookedDesks/CheckAvailability?bookedDate=${formattedDate}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(reservedDesks => {
                    updateDeskAvailability(reservedDesks);
                    var modal = new bootstrap.Modal(document.getElementById('reservationModal'));
                    modal.show();
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                    alert('Wystąpił błąd podczas pobierania danych. Spróbuj ponownie później.');
                });
        }
    });

        calendar.render();

        // Funkcja aktualizująca dostępność biurek
        function updateDeskAvailability(reservedDesks) {
            $('.desk').each(function () {
                var deskId = $(this).data('desk-id');
                if (reservedDesks.includes(deskId)) {
                    $(this).css({
                        'border': '2px solid red',
                        'background-color': 'rgba(128, 128, 128, 0.5)'
                    });
                } else {
                    $(this).css({
                        'border': '2px solid transparent',
                        'background-color': 'transparent'
                    });
                }

                // Jeśli biurko jest wybrane, to przywróć styl dla selected-desk
                if ($(this).hasClass('selected-desk')) {
                    $(this).css({
                        'border': '2px solid green',
                        'background-color': 'rgba(144, 238, 144, 0.5)'
                    });
                }
            });
        }

        // Dane biurek
        var desks = [
            { id: 1, left: 318, top: 35 },
            { id: 2, left: 388, top: 35 },
            { id: 3, left: 318, top: 115 },
            { id: 4, left: 388, top: 115 },
            { id: 5, left: 492, top: 35 },
            { id: 6, left: 562, top: 35 },
            { id: 7, left: 492, top: 115 },
            { id: 8, left: 562, top: 115 },
            { id: 9, left: 492, top: 195 },
            { id: 10, left: 562, top: 195 },
            { id: 11, left: 492, top: 300 },
            { id: 12, left: 562, top: 300 },
            { id: 13, left: 492, top: 375 },
            { id: 14, left: 562, top: 375 },
            { id: 15, left: 492, top: 450 },
            { id: 16, left: 562, top: 450 },
            { id: 17, left: 654, top: 35 },
            { id: 18, left: 724, top: 35 },
            { id: 19, left: 654, top: 115 },
            { id: 20, left: 724, top: 115 },
            { id: 21, left: 654, top: 195 },
            { id: 22, left: 724, top: 195 }
        ];

        // Tworzenie elementów biurek
        desks.forEach(function(desk) {
            var deskElement = $('<div class="desk" data-desk-id="' + desk.id + '"></div>');
            deskElement.css({
                position: 'absolute',
                width: '70px',
                height: '70px',
                left: desk.left + 'px',
                top: desk.top + 'px',
                zIndex: 1, // Ustawienie z-index
                border: '2px solid transparent' // Domyślnie przezroczyste obramowanie
            });
            $('#deskLayout').append(deskElement);
        });

        // Funkcja do dodawania obramowania na kliknięcie w biurko
        $(document).on('click', '.desk', function() {
            // Usunięcie klasy 'selected-desk' z wszystkich biurek oprócz zarezerwowanych
            $('.desk').each(function() {
            if (!$(this).hasClass('reserved-desk')) {
                $(this).removeClass('selected-desk');
                $(this).css({
                'border': '2px solid transparent',
                'background-color': 'transparent'
                });
            }
            });
            // Dodanie klasy 'selected-desk' tylko do klikniętego biurka
            if (!$(this).hasClass('reserved-desk')) {
            $(this).addClass('selected-desk'); // Dodaje klasę na kliknięcie
            $(this).css({
                'border': '2px solid green', /* Obramowanie po kliknięciu */
                'background-color': 'rgba(144, 238, 144, 0.5)' 
            });
            }
        });

        // Funkcja aktualizująca dostępność biurek
        function updateDeskAvailability(reservedDesks) {
            $('.desk').each(function () {
            var deskId = $(this).data('desk-id');
            if (reservedDesks.includes(deskId)) {
                $(this).addClass('reserved-desk');
                $(this).css({
                'border': '2px solid red',
                'background-color': 'rgba(128, 128, 128, 0.5)'
                });
            } else {
                $(this).removeClass('reserved-desk');
                $(this).css({
                'border': '2px solid transparent',
                'background-color': 'transparent'
                });
            }

            // Jeśli biurko jest wybrane, to przywróć styl dla selected-desk
            if ($(this).hasClass('selected-desk')) {
                $(this).css({
                'border': '2px solid green',
                'background-color': 'rgba(144, 238, 144, 0.5)'
                });
            }
            });
        }

        $(document).on('click', '#saveBooking', function() {
            // Sprawdzenie, czy biurko jest wybrane
            var selectedDesk = $('.desk.selected-desk');
            if (selectedDesk.length === 0) {
                alert("Proszę wybrać biurko.");
                return;
            }

            var deskId = selectedDesk.data('desk-id');
            var bookedDate = $('#selectedDate').text();
            var userId = $('#userId').val();
            var firstName = $('#firstName').val();
            var lastName = $('#lastName').val();

            var url = `http://localhost:5150/BookedDesks/Create?deskId=${deskId}&userId=${userId}&firstName=${firstName}&lastName=${lastName}&bookedDate=${bookedDate}T08:00:00`;

            // Przekierowanie użytkownika do URL
            window.location.href = url;
        });
    });
</script>
